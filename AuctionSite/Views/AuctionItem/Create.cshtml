@model AuctionSite.Models.AuctionItemCreateViewModel

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>


@using (Html.BeginForm("Create", "AuctionItem", FormMethod.Post, new { @enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.AuctionItemID);

    <div class="form-horizontal">
        <h4>AuctionItemCreateViewModel</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MinPrice, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MinPrice, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MinPrice, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SelectedCategory, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.SelectedCategory, Model.Categories, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.SelectedCategory, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Product Images</label>
            <div id="image-list" class="col-md-10">
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script>
        $(function () {
            addInputIfFull();
        })

        function imgOnChange(e) {
            previewImage(e);
            addInputIfFull();
        }

        function previewImage(e) {
            let srcString = "@Url.Content("~/images/preview.png")";
            if (e.target.files.length > 0)
                srcString = URL.createObjectURL(e.target.files[0]);
            $("#" + e.target.name + " > img").attr({ src: srcString });
        }

        function addInputIfFull() {
            let inputs = $("input[type=file]");
            let emptyInputs = inputs.filter((index, element) => (element.files[0]) ? false : true);
            if (emptyInputs.length == 0) {
                if (inputs.length < 4) {
                    $("#image-list").append(createNewInput(inputs.length + 1));
                }
                else if ($("#image-list > div[role=alert]").length == 0) {
                    $("#image-list").append(
                        $("<div>Maximum number of images reached!</div>")
                            .attr({ class: "alert alert-info", role: "alert", style: "margin-top: 20px;" })
                    );
                }
            }
            else if ($("#image-list > div[role=alert]").length != 0) {
                $("#image-list > div[role=alert]").remove();
            }
        }

        function deleteInput() {

        }

        function createNewInput(ID) {
            return $('<div></div>')
                .attr({ id: "image" + ID })
                .append(
                    $('<input />')
                        .attr({ name: "image" + ID, type: "file", accept: "image/*", class: "form-control", style: "display: inline-block; margin-right: 20px;" })
                        .change(imgOnChange),
                    $('<img />')
                        .attr({ src: "@Url.Content("~/images/preview.png")", style: "height: 80px; margin-right: 10px;" }),
                    $('<button></button>')
                        .attr({ class: "btn btn-danger", type: "button" })
                        .append($('<span></span>').attr({ class: "glyphicon glyphicon-trash" })),
                    $('<br /><br />')
                );
        } 
    </script>
}
